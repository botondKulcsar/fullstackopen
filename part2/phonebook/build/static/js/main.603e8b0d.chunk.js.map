{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","delete","put","Notification","message","style","borderStyle","borderColor","color","borderRadius","padding","background","marginBottom","Error","Filter","value","onChange","PersonForm","props","handleSubmit","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","PersonDetail","name","number","remove","onClick","Persons","persons","filter","visible","personList","map","person","App","useState","setPersons","setNewName","setNewNumber","setFilter","notification","setNotification","error","setError","useEffect","personService","setVisible","event","searchTerm","target","toLowerCase","filteredList","includes","preventDefault","alreadyAdded","find","window","confirm","updatedPerson","p","setTimeout","catch","savedPerson","concat","personToRemove","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.603e8b0d.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = `/api/persons`\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data)\n}\n\nconst create = (newPerson) => {\n    const request = axios.post(baseUrl, newPerson);\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(baseUrl + '/' + id)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    const request = axios.put(baseUrl + '/' + id, newPerson);\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from \"react\";\n\nimport personService from \"./services/persons\"\n\nconst Notification = ({ message }) => {\n  const notificationStyle = {\n    borderStyle: \"solid\",\n    borderColor: \"green\",\n    color: \"green\",\n    borderRadius: 5,\n    padding: 5,\n    background: \"lightgrey\",\n    marginBottom: 10\n  }\n\n  return (\n    <div style={notificationStyle}>\n      { message }\n    </div>\n  )\n}\n\nconst Error = ({ message }) => {\n  const errorStyle = {\n    borderStyle: \"solid\",\n    borderColor: \"red\",\n    color: \"red\",\n    borderRadius: 5,\n    padding: 5,\n    background: \"lightgrey\",\n    marginBottom: 10\n  }\n\n  return (\n    <div style={errorStyle}>\n      { message }\n    </div>\n  )\n}\n\nconst Filter = ({ value, onChange }) => (\n  <div>filter shown with\n    <input\n      value={value}\n      onChange={onChange}\n    />\n  </div>\n)\n\nconst PersonForm = (props) => {\n  const { handleSubmit, newName, handleNameChange, newNumber, handleNumberChange } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name:\n        <input\n          value={newName}\n          onChange={handleNameChange} />\n      </div>\n      <div>\n        number:\n        <input\n          value={newNumber}\n          onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst PersonDetail = ({ name, number, remove }) => (\n  <>\n    <p>{name} {number} <button onClick={remove}>delete</button></p>\n  </>\n)\n\nconst Persons = (props) => {\n  const { persons, filter, visible, remove } = props;\n  const personList = persons.map(person => <PersonDetail key={person.name} name={person.name} number={person.number} remove={() => remove(person.id)} />);\n\n  return (\n    <>\n      {filter ? visible : personList}\n    </>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(personList => {\n        setPersons(personList)\n      })\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const alreadyAdded = persons.find(person => person.name === newName);\n    if (alreadyAdded) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)) {\n        const updatedPerson = { ...alreadyAdded, number: newNumber }\n        personService\n          .update(alreadyAdded.id, updatedPerson)\n          .then(updatedPerson => {\n            setPersons(persons.map(p => p.id === updatedPerson.id ? updatedPerson : p));\n            setNotification(`${updatedPerson.name} has been updated`);\n            setTimeout(() => setNotification(null), 5000)\n            setNewName('');\n            setNewNumber('');\n          })\n          .catch(error => {\n            setError(error.response.data.error)\n            setTimeout(() => setError(null), 4000)\n          })\n\n      }\n      return;\n    }\n    const newPerson = { name: newName, number: newNumber };\n\n    personService\n      .create(newPerson)\n      .then(savedPerson => {\n        setPersons(persons.concat(savedPerson));\n        setNotification(`Added ${savedPerson.name}`);\n        setTimeout(() => setNotification(null), 5000)\n        setNewName('');\n        setNewNumber('');\n      })\n      .catch(error => {\n        setError(error.response.data.error);\n        setTimeout(() => { setError(null) }, 5000)\n      })\n\n  }\n\n  const remove = (id) => {\n    const personToRemove = persons.find(p => p.id === id);\n    if (window.confirm(`Delete ${personToRemove.name}?`)) {\n\n      personService\n        .remove(id)\n        .then(deletedPerson => {\n          setNotification(`${personToRemove.name} has been deleted`);\n          setTimeout(() => setNotification(null), 4000);\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n\n  }\n\n\n  const [visible, setVisible] = useState([]);\n\n  const handleFilter = (event) => {\n    const searchTerm = event.target.value.toLowerCase()\n    setFilter(searchTerm);\n\n    const filteredList = persons\n      .filter(person => person.name.toLowerCase().includes(searchTerm))\n      .map(person => <PersonDetail key={person.name} name={person.name} number={person.number} />);\n\n    setVisible(filteredList);\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {notification && <Notification message={notification} />}\n      {error && <Error message={error} />}\n      <Filter\n        value={filter}\n        onChange={handleFilter}\n      />\n\n      <h3>add a new</h3>\n\n      <PersonForm\n        handleSubmit={handleSubmit}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons\n        persons={persons}\n        filter={filter}\n        visible={visible}\n        remove={remove}\n      />\n\n    </div>\n  )\n}\n\nexport default App;\n","\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}